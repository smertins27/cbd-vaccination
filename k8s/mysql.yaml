#Begin: Configmap
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-deployment-init-configmap
data:
  mysql-init.sql: |
    DROP TABLE IF EXISTS `states`;
    CREATE TABLE `states` (
      `iso`        varchar(2) NOT NULL,
      `name`      varchar(255) NOT NULL,
      `population` bigint(20) NOT NULL,
      PRIMARY KEY (`iso`),
      UNIQUE INDEX (`iso`));

    DROP TABLE IF EXISTS vaccines;
    CREATE TABLE vaccines (
      code varchar(3) NOT NULL,
      name varchar(255) NOT NULL,
      PRIMARY KEY (code),
      UNIQUE INDEX (code));


    DROP TABLE IF EXISTS vaccination_progress;
    CREATE TABLE vaccination_progress (
      id           bigint(20) NOT NULL AUTO_INCREMENT,
      percentage   float NOT NULL,
      statesiso    varchar(2) NOT NULL,
      vaccinescode varchar(3) NOT NULL,
      PRIMARY KEY (id),
      UNIQUE INDEX (id));


    DROP TABLE IF EXISTS vaccinations;
    CREATE TABLE vaccinations (
      id           bigint(20) NOT NULL AUTO_INCREMENT,
      vaccinescode varchar(3) NOT NULL,
      statesiso    varchar(2) NOT NULL,
      vac_amount   int(10) NOT NULL,
      PRIMARY KEY (id),
      UNIQUE INDEX (id));




    INSERT INTO `states` (`iso`, `name`, `population`) VALUES ('BB', 'Brandenburg', 2522000);
    INSERT INTO `states` (`iso`, `name`, `population`) VALUES ('BE', 'Berlin', 3669000);
    INSERT INTO `states` (`iso`, `name`, `population`) VALUES ('BW', 'Baden-Wuettenberg', 11100000);
    INSERT INTO `states` (`iso`, `name`, `population`) VALUES ('BY', 'Bayern', 13125000);
    INSERT INTO `states` (`iso`, `name`, `population`) VALUES ('HB', 'Bremen', 681000);
    INSERT INTO `states` (`iso`, `name`, `population`) VALUES ('HE', 'Hessen', 6288000);
    INSERT INTO `states` (`iso`, `name`, `population`) VALUES ('HH', 'Hamburg', 1847000);
    INSERT INTO `states` (`iso`, `name`, `population`) VALUES ('MV', 'Mecklenburg-Vorpommern', 1608000);
    INSERT INTO `states` (`iso`, `name`, `population`) VALUES ('NI', 'Niedersachsen', 7994000);
    INSERT INTO `states` (`iso`, `name`, `population`) VALUES ('NW', 'Nordreihn-Westfalen', 17947000);
    INSERT INTO `states` (`iso`, `name`, `population`) VALUES ('RP', 'Reihnland-Pfalz', 4094000);
    INSERT INTO `states` (`iso`, `name`, `population`) VALUES ('SH', 'Schleswig-Holstein', 2904000);
    INSERT INTO `states` (`iso`, `name`, `population`) VALUES ('SL', 'Saarland', 987000);
    INSERT INTO `states` (`iso`, `name`, `population`) VALUES ('SN', 'Sachsen', 4072000);
    INSERT INTO `states` (`iso`, `name`, `population`) VALUES ('ST', 'Sachsen-Anhalt', 2195000);
    INSERT INTO `states` (`iso`, `name`, `population`) VALUES ('TH', 'Tuehringen', 2133000);

    INSERT INTO `vaccines` (`code`, `name`) VALUES ('azc', 'AstraZeneca');
    INSERT INTO `vaccines` (`code`, `name`) VALUES ('bnt', 'BioNTech/Pifzer');
    INSERT INTO `vaccines` (`code`, `name`) VALUES ('cuv', 'CureVac');
    INSERT INTO `vaccines` (`code`, `name`) VALUES ('gsk', 'Sanofi/GSK');
    INSERT INTO `vaccines` (`code`, `name`) VALUES ('jaj', 'Johnson & Johnson');
    INSERT INTO `vaccines` (`code`, `name`) VALUES ('mdn', 'Moderna');

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: my-mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-mysql
  template:
    metadata:
      labels:
        app: my-mysql
    spec:
      # Mount the configmap volume
      # This is an excerpt of deployment.spec.template.spec
      volumes:
        - name: init-volume
          configMap:
            name: mysql-deployment-init-configmap
      containers:
        - name: my-mysql
          image: mysql
          volumeMounts:
            - name: init-volume
              mountPath: /docker-entrypoint-initdb.d/
          # Set required environment variables to initialize the container
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "mysecretpw"
            - name: MYSQL_DATABASE
              value: "vaccination"
          ports:
            - containerPort: 33060

---
#Begin: Service
apiVersion: v1
kind: Service
metadata:
  name: my-app-mysql-service
spec:
  selector:
    app: my-mysql
  ports:
    - name: mysql-xproto
      protocol: TCP
      port: 33060
      targetPort: 33060
#End: Service
